Codsoft Internship - Data Science
Task 2: Movie Rating Prediction

---------------------------------------------
Step 1: Import Libraries
---------------------------------------------
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

---------------------------------------------
Step 2: Load Dataset
---------------------------------------------
# You can use the MovieLens dataset or any movie rating dataset.
# For demonstration, we will create a small sample dataset.

data = {
    'movie': ['Inception','Inception','Avatar','Avatar','Titanic','Titanic','Avengers','Avengers'],
    'genre': ['Sci-Fi','Sci-Fi','Action','Action','Romance','Romance','Action','Action'],
    'user': ['A','B','A','C','B','C','A','D'],
    'age': [22,25,30,35,25,28,22,40],
    'rating': [5,4,4,5,5,4,5,4]
}

df = pd.DataFrame(data)
print(df.head())

---------------------------------------------
Step 3: Data Preprocessing
---------------------------------------------
# Encode categorical variables
le = LabelEncoder()
for col in ['movie','genre','user']:
    df[col] = le.fit_transform(df[col])

print(df.head())

---------------------------------------------
Step 4: Feature Selection
---------------------------------------------
X = df.drop('rating', axis=1)
y = df['rating']

---------------------------------------------
Step 5: Train-Test Split
---------------------------------------------
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

---------------------------------------------
Step 6: Model Training
---------------------------------------------
model = LinearRegression()
model.fit(X_train, y_train)

---------------------------------------------
Step 7: Predictions & Evaluation
---------------------------------------------
y_pred = model.predict(X_test)

print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("R2 Score:", r2_score(y_test, y_pred))

---------------------------------------------
Step 8: Results
---------------------------------------------
# The model predicts movie ratings based on user, movie, genre, and age.
# With a larger dataset (e.g., MovieLens), the performance can be evaluated better.

---------------------------------------------
Conclusion:
---------------------------------------------
We successfully built a machine learning model to predict movie ratings.
This completes Codsoft Data Science Task 2.
